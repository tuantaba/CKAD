- Create Pod 
kubectl  run nginx --image=nginx  --dry-run -n mynamespace -o yaml > pod.yaml

- Create busybox pod, run command and delete
kubectl  run busybox --image=busybox --restart=Never --command  -it --rm=True  -- en
kubectl  run busybox --image=busybox --command --rm -it --restart=Never  -- echo "hello world"

- Create a busybox pod (using YAML) that runs the command "env". Run it and see the output
kubectl  run busybox --image=busybox --restart=Never --dry-run --command -o yaml   -- env  > create_pod_run_command.yaml

- Get the YAML for a new ResourceQuota called 'myrq' with hard limits of 1 CPU, 1G memory and 2 pods without creating it
kubectl create quota myResourceQuota --hard=cpu=1,memory=1G,pods=2 --dry-run -o yaml  > myResourceQuota.yaml

- Start a single instance and let the container expose port 80
kubectl run  nginx --image=nginx --restart=Never --port=80

- Change pod's image to nginx:1.7.1
Eg: kubectl set image POD/POD_NAME CONTAINER_NAME=IMAGE_NAME:TAG
kubectl set image pod/nginx nginx=nginx:1.7.1

- Get nginx POD IP, use a temp busybox to wget its "/"
NGINX_POD_IP = `kubectl  get pod nginx  -o jsonpath='{.status.podIP}'`
kubectl run busybox --image=busybox --env="NGINX_IP=$NGINX_IP" --rm -it --restart=Never -- sh -c 'wget -O- $NGINX_IP:80'

Or : kubectl run busybox --image=busybox --rm -it --restart=Never -- wget -O- $(kubectl get pod nginx -o jsonpath='{.status.podIP}:{.spec.containers[0].ports[0].containerPort}')

- Using Environment
kubectl  run  nginx-new --image=nginx --restart=Never --env="var1=val1" --command -it --rm -- env|grep var1


